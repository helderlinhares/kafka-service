/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package me.hl.message;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MessageCreatedEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5210978898156602414L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MessageCreatedEvent\",\"namespace\":\"me.hl.message\",\"fields\":[{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Message code\"},{\"name\":\"content\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MessageContent\",\"fields\":[{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Message Title\"},{\"name\":\"body\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Message Body\",\"default\":null}]}],\"doc\":\"Message content\",\"default\":null},{\"name\":\"created_at\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Message creation date\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MessageCreatedEvent> ENCODER =
      new BinaryMessageEncoder<MessageCreatedEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MessageCreatedEvent> DECODER =
      new BinaryMessageDecoder<MessageCreatedEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MessageCreatedEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MessageCreatedEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MessageCreatedEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MessageCreatedEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MessageCreatedEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MessageCreatedEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MessageCreatedEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MessageCreatedEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Message code */
  private java.lang.String code;
  /** Message content */
  private me.hl.message.MessageContent content;
  /** Message creation date */
  private java.lang.String created_at;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MessageCreatedEvent() {}

  /**
   * All-args constructor.
   * @param code Message code
   * @param content Message content
   * @param created_at Message creation date
   */
  public MessageCreatedEvent(java.lang.String code, me.hl.message.MessageContent content, java.lang.String created_at) {
    this.code = code;
    this.content = content;
    this.created_at = created_at;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return code;
    case 1: return content;
    case 2: return created_at;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: code = value$ != null ? value$.toString() : null; break;
    case 1: content = (me.hl.message.MessageContent)value$; break;
    case 2: created_at = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'code' field.
   * @return Message code
   */
  public java.lang.String getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * Message code
   * @param value the value to set.
   */
  public void setCode(java.lang.String value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'content' field.
   * @return Message content
   */
  public me.hl.message.MessageContent getContent() {
    return content;
  }


  /**
   * Sets the value of the 'content' field.
   * Message content
   * @param value the value to set.
   */
  public void setContent(me.hl.message.MessageContent value) {
    this.content = value;
  }

  /**
   * Gets the value of the 'created_at' field.
   * @return Message creation date
   */
  public java.lang.String getCreatedAt() {
    return created_at;
  }


  /**
   * Sets the value of the 'created_at' field.
   * Message creation date
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.String value) {
    this.created_at = value;
  }

  /**
   * Creates a new MessageCreatedEvent RecordBuilder.
   * @return A new MessageCreatedEvent RecordBuilder
   */
  public static me.hl.message.MessageCreatedEvent.Builder newBuilder() {
    return new me.hl.message.MessageCreatedEvent.Builder();
  }

  /**
   * Creates a new MessageCreatedEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MessageCreatedEvent RecordBuilder
   */
  public static me.hl.message.MessageCreatedEvent.Builder newBuilder(me.hl.message.MessageCreatedEvent.Builder other) {
    if (other == null) {
      return new me.hl.message.MessageCreatedEvent.Builder();
    } else {
      return new me.hl.message.MessageCreatedEvent.Builder(other);
    }
  }

  /**
   * Creates a new MessageCreatedEvent RecordBuilder by copying an existing MessageCreatedEvent instance.
   * @param other The existing instance to copy.
   * @return A new MessageCreatedEvent RecordBuilder
   */
  public static me.hl.message.MessageCreatedEvent.Builder newBuilder(me.hl.message.MessageCreatedEvent other) {
    if (other == null) {
      return new me.hl.message.MessageCreatedEvent.Builder();
    } else {
      return new me.hl.message.MessageCreatedEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for MessageCreatedEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MessageCreatedEvent>
    implements org.apache.avro.data.RecordBuilder<MessageCreatedEvent> {

    /** Message code */
    private java.lang.String code;
    /** Message content */
    private me.hl.message.MessageContent content;
    private me.hl.message.MessageContent.Builder contentBuilder;
    /** Message creation date */
    private java.lang.String created_at;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(me.hl.message.MessageCreatedEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.content)) {
        this.content = data().deepCopy(fields()[1].schema(), other.content);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasContentBuilder()) {
        this.contentBuilder = me.hl.message.MessageContent.newBuilder(other.getContentBuilder());
      }
      if (isValidValue(fields()[2], other.created_at)) {
        this.created_at = data().deepCopy(fields()[2].schema(), other.created_at);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing MessageCreatedEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(me.hl.message.MessageCreatedEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.content)) {
        this.content = data().deepCopy(fields()[1].schema(), other.content);
        fieldSetFlags()[1] = true;
      }
      this.contentBuilder = null;
      if (isValidValue(fields()[2], other.created_at)) {
        this.created_at = data().deepCopy(fields()[2].schema(), other.created_at);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'code' field.
      * Message code
      * @return The value.
      */
    public java.lang.String getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * Message code
      * @param value The value of 'code'.
      * @return This builder.
      */
    public me.hl.message.MessageCreatedEvent.Builder setCode(java.lang.String value) {
      validate(fields()[0], value);
      this.code = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * Message code
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'code' field.
      * Message code
      * @return This builder.
      */
    public me.hl.message.MessageCreatedEvent.Builder clearCode() {
      code = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'content' field.
      * Message content
      * @return The value.
      */
    public me.hl.message.MessageContent getContent() {
      return content;
    }


    /**
      * Sets the value of the 'content' field.
      * Message content
      * @param value The value of 'content'.
      * @return This builder.
      */
    public me.hl.message.MessageCreatedEvent.Builder setContent(me.hl.message.MessageContent value) {
      validate(fields()[1], value);
      this.contentBuilder = null;
      this.content = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'content' field has been set.
      * Message content
      * @return True if the 'content' field has been set, false otherwise.
      */
    public boolean hasContent() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'content' field and creates one if it doesn't exist yet.
     * Message content
     * @return This builder.
     */
    public me.hl.message.MessageContent.Builder getContentBuilder() {
      if (contentBuilder == null) {
        if (hasContent()) {
          setContentBuilder(me.hl.message.MessageContent.newBuilder(content));
        } else {
          setContentBuilder(me.hl.message.MessageContent.newBuilder());
        }
      }
      return contentBuilder;
    }

    /**
     * Sets the Builder instance for the 'content' field
     * Message content
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public me.hl.message.MessageCreatedEvent.Builder setContentBuilder(me.hl.message.MessageContent.Builder value) {
      clearContent();
      contentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'content' field has an active Builder instance
     * Message content
     * @return True if the 'content' field has an active Builder instance
     */
    public boolean hasContentBuilder() {
      return contentBuilder != null;
    }

    /**
      * Clears the value of the 'content' field.
      * Message content
      * @return This builder.
      */
    public me.hl.message.MessageCreatedEvent.Builder clearContent() {
      content = null;
      contentBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_at' field.
      * Message creation date
      * @return The value.
      */
    public java.lang.String getCreatedAt() {
      return created_at;
    }


    /**
      * Sets the value of the 'created_at' field.
      * Message creation date
      * @param value The value of 'created_at'.
      * @return This builder.
      */
    public me.hl.message.MessageCreatedEvent.Builder setCreatedAt(java.lang.String value) {
      validate(fields()[2], value);
      this.created_at = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'created_at' field has been set.
      * Message creation date
      * @return True if the 'created_at' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'created_at' field.
      * Message creation date
      * @return This builder.
      */
    public me.hl.message.MessageCreatedEvent.Builder clearCreatedAt() {
      created_at = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MessageCreatedEvent build() {
      try {
        MessageCreatedEvent record = new MessageCreatedEvent();
        record.code = fieldSetFlags()[0] ? this.code : (java.lang.String) defaultValue(fields()[0]);
        if (contentBuilder != null) {
          try {
            record.content = this.contentBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("content"));
            throw e;
          }
        } else {
          record.content = fieldSetFlags()[1] ? this.content : (me.hl.message.MessageContent) defaultValue(fields()[1]);
        }
        record.created_at = fieldSetFlags()[2] ? this.created_at : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MessageCreatedEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<MessageCreatedEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MessageCreatedEvent>
    READER$ = (org.apache.avro.io.DatumReader<MessageCreatedEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.code);

    if (this.content == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.content.customEncode(out);
    }

    if (this.created_at == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.created_at);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.code = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.content = null;
      } else {
        if (this.content == null) {
          this.content = new me.hl.message.MessageContent();
        }
        this.content.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.created_at = null;
      } else {
        this.created_at = in.readString();
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.code = in.readString();
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.content = null;
          } else {
            if (this.content == null) {
              this.content = new me.hl.message.MessageContent();
            }
            this.content.customDecode(in);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.created_at = null;
          } else {
            this.created_at = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










